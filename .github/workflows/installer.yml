name: Create Installer for The Onion Pack

on:
  release:
    types: [published]
  
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-go@master
      with:
        go-version: '1.14'

    - name: Get obfs4 version from setup.ini
      shell: pwsh
      run: |
        echo "::set-env name=OBFS_VERSION::$(.github\support\ini.ps1 -File theonionpack\setup.ini -Section obfs4 -Value version)"

    - name: Clone obfs4
      run: git clone https://gitlab.com/yawning/obfs4.git

    - name: Checkout obfs4proxy
      run: git checkout obfs4proxy-$ENV:OBFS_VERSION
      working-directory: obfs4

    - name: Get obfs4proxy's dependencies...
      run: go get -d "$ENV:GOROOT\src\gitlab.com\yawning\obfs4.git\..."
      if: failure()

    - name: Build obfs4proxy
      run: go build -x -v -i -o .\obfs4proxy\obfs4proxy .\obfs4proxy
      if: success()
      working-directory: obfs4
    
    - name: Check for obfsproxy
      shell: pwsh
      run: | 
        cd .\obfs4proxy\obfs4proxy
        dir
      working-directory: obfs4

    - uses: actions/setup-python@master
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      if: always()

    - name: Run setup.py to create TheOnionPack sdist
      run: python setup.py sdist --dist-dir installer

    - name: Run Inno Compiler
      run: iscc "installer\theonionpack.iss" "/Dtheonionpack=."
    
    - name: Upload files to a GitHub release
      uses: svenstaro/upload-release-action@1.0.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: installer\Output\TheOnionPack.exe
        asset_name: TheOnionPack.exe
        tag: ${{ github.ref }}
        overwrite: true          
